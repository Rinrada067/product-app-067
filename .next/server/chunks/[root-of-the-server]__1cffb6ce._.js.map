{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 66, "column": 0}, "map": {"version":3,"sources":["file:///D:/product-app049/libs/prisma.ts"],"sourcesContent":["import { PrismaClient } from \"@prisma/client/extension\";\r\n\r\nconst globalForPrisma = globalThis as unknown as {\r\n    prisma: PrismaClient | undefined\r\n}\r\nexport const prisma =\r\n    globalForPrisma.prisma ??\r\n    new PrismaClient({\r\n        log: ['query'], \r\n    })\r\nif (process.env.NODE_ENV !== 'production') globalForPrisma.prisma = prisma"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,kBAAkB;AAGjB,MAAM,SACT,gBAAgB,MAAM,IACtB,IAAI,uJAAA,CAAA,eAAY,CAAC;IACb,KAAK;QAAC;KAAQ;AAClB;AACJ,wCAA2C,gBAAgB,MAAM,GAAG","debugId":null}},
    {"offset": {"line": 90, "column": 0}, "map": {"version":3,"sources":["file:///D:/product-app049/app/api/products/route.ts"],"sourcesContent":["// app/api/products/route.ts\r\nimport { prisma } from '@/libs/prisma'\r\nimport { NextResponse } from 'next/server'\r\nexport async function GET() {\r\n const products = await prisma.product.findMany()\r\n return NextResponse.json(products)\r\n}\r\n\r\nexport async function POST(req: Request) {\r\n const body = await req.json()\r\n const newProduct = await prisma.product.create({\r\n data: {\r\n name: body.name,\r\n description: body.description,\r\n price: body.price,\r\n },\r\n })\r\n return NextResponse.json(newProduct)\r\n}"],"names":[],"mappings":"AAAA,4BAA4B;;;;;AAC5B;AACA;;;AACO,eAAe;IACrB,MAAM,WAAW,MAAM,gHAAA,CAAA,SAAM,CAAC,OAAO,CAAC,QAAQ;IAC9C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;AAC1B;AAEO,eAAe,KAAK,GAAY;IACtC,MAAM,OAAO,MAAM,IAAI,IAAI;IAC3B,MAAM,aAAa,MAAM,gHAAA,CAAA,SAAM,CAAC,OAAO,CAAC,MAAM,CAAC;QAC/C,MAAM;YACN,MAAM,KAAK,IAAI;YACf,aAAa,KAAK,WAAW;YAC7B,OAAO,KAAK,KAAK;QACjB;IACA;IACA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;AAC1B","debugId":null}}]
}
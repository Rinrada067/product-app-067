{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 26, "column": 0}, "map": {"version":3,"sources":["file:///D:/next-project067/product-app-067/app/products/new/page.tsx"],"sourcesContent":["\r\nimport { NextResponse } from 'next/server'\r\nimport { PrismaClient } from '@prisma/client'\r\n\r\nconst prisma = new PrismaClient()\r\n\r\nexport async function POST(request: Request) {\r\n  try {\r\n    const { name, description, price, categoryId } = await request.json()\r\n\r\n    if (!name || !description || !price || !categoryId) {\r\n      return NextResponse.json({ error: 'ข้อมูลไม่ครบถ้วน' }, { status: 400 })\r\n    }\r\n\r\n    if (typeof name !== 'string' || typeof description !== 'string') {\r\n      return NextResponse.json({ error: 'ชื่อสินค้าและรายละเอียดต้องเป็นข้อความ' }, { status: 400 })\r\n    }\r\n\r\n    if (typeof price !== 'number' || price <= 0) {\r\n      return NextResponse.json({ error: 'ราคาต้องเป็นตัวเลขมากกว่า 0' }, { status: 400 })\r\n    }\r\n\r\n    if (typeof categoryId !== 'number') {\r\n      return NextResponse.json({ error: 'หมวดหมู่ไม่ถูกต้อง' }, { status: 400 })\r\n    }\r\n\r\n    // ตรวจสอบว่าหมวดหมู่มีอยู่จริงไหม\r\n    const categoryExists = await prisma.category.findUnique({\r\n      where: { c_id: categoryId },\r\n    })\r\n\r\n    if (!categoryExists) {\r\n      return NextResponse.json({ error: 'หมวดหมู่ไม่ถูกต้อง' }, { status: 400 })\r\n    }\r\n\r\n    // สร้างสินค้าใหม่\r\n    const newProduct = await prisma.product.create({\r\n      data: {\r\n        name,\r\n        description,\r\n        price,\r\n        categoryId,\r\n      },\r\n    })\r\n\r\n    return NextResponse.json(newProduct, { status: 201 })\r\n  } catch (error) {\r\n    console.error('Error creating product:', error)\r\n    return NextResponse.json({ error: 'ไม่สามารถเพิ่มสินค้าได้' }, { status: 500 })\r\n  } finally {\r\n    await prisma.$disconnect()\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;AACA;AACA;;;AAEA,MAAM,SAAS,IAAI,6HAAA,CAAA,eAAY;AAExB,eAAe,KAAK,OAAgB;IACzC,IAAI;QACF,MAAM,EAAE,IAAI,EAAE,WAAW,EAAE,KAAK,EAAE,UAAU,EAAE,GAAG,MAAM,QAAQ,IAAI;QAEnE,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,SAAS,CAAC,YAAY;YAClD,OAAO,8HAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAmB,GAAG;gBAAE,QAAQ;YAAI;QACxE;QAEA,IAAI,OAAO,SAAS,YAAY,OAAO,gBAAgB,UAAU;YAC/D,OAAO,8HAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAyC,GAAG;gBAAE,QAAQ;YAAI;QAC9F;QAEA,IAAI,OAAO,UAAU,YAAY,SAAS,GAAG;YAC3C,OAAO,8HAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAA8B,GAAG;gBAAE,QAAQ;YAAI;QACnF;QAEA,IAAI,OAAO,eAAe,UAAU;YAClC,OAAO,8HAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAqB,GAAG;gBAAE,QAAQ;YAAI;QAC1E;QAEA,kCAAkC;QAClC,MAAM,iBAAiB,MAAM,OAAO,QAAQ,CAAC,UAAU,CAAC;YACtD,OAAO;gBAAE,MAAM;YAAW;QAC5B;QAEA,IAAI,CAAC,gBAAgB;YACnB,OAAO,8HAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAqB,GAAG;gBAAE,QAAQ;YAAI;QAC1E;QAEA,kBAAkB;QAClB,MAAM,aAAa,MAAM,OAAO,OAAO,CAAC,MAAM,CAAC;YAC7C,MAAM;gBACJ;gBACA;gBACA;gBACA;YACF;QACF;QAEA,OAAO,8HAAA,CAAA,eAAY,CAAC,IAAI,CAAC,YAAY;YAAE,QAAQ;QAAI;IACrD,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,2BAA2B;QACzC,OAAO,8HAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAA0B,GAAG;YAAE,QAAQ;QAAI;IAC/E,SAAU;QACR,MAAM,OAAO,WAAW;IAC1B;AACF","debugId":null}}]
}
{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 98, "column": 0}, "map": {"version":3,"sources":["file:///D:/next-project067/product-app-067/lib/prisma.ts"],"sourcesContent":["import { PrismaClient } from '@prisma/client';\r\n\r\nconst globalForPrisma = globalThis as unknown as { prisma?: PrismaClient }\r\n\r\nexport const prisma =\r\n  globalForPrisma.prisma ??\r\n  new PrismaClient({\r\n    log: ['query'], // ช่วย debug ดูคําสั่งที่ยิงไป DB ระหว่างพัฒนา\r\n  })\r\nif (process.env.NODE_ENV !== 'production') globalForPrisma.prisma = prisma"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,kBAAkB;AAEjB,MAAM,SACX,gBAAgB,MAAM,IACtB,IAAI,6HAAA,CAAA,eAAY,CAAC;IACf,KAAK;QAAC;KAAQ;AAChB;AACF,wCAA2C,gBAAgB,MAAM,GAAG","debugId":null}},
    {"offset": {"line": 114, "column": 0}, "map": {"version":3,"sources":["file:///D:/next-project067/product-app-067/app/api/auth/%5B...nextauth%5D/route.ts"],"sourcesContent":["import NextAuth from \"next-auth\";\r\nimport CredentialsProvider from \"next-auth/providers/credentials\";\r\nimport { prisma } from \"@/lib/prisma\";\r\nimport bcrypt from \"bcryptjs\";\r\nimport type { NextAuthOptions } from \"next-auth\";\r\n\r\nimport { Session } from \"inspector/promises\";\r\nimport Credentials from \"next-auth/providers/credentials\";\r\n\r\nexport const authOptions: NextAuthOptions = {\r\n  session: { strategy: \"jwt\" as const }, // ✅ ตัวเล็ก\r\n  providers: [\r\n    CredentialsProvider({\r\n      name: \"Credentials\",\r\n      credentials: {\r\n        username: { label: \"Username\", type: \"text\" },\r\n        password: { label: \"Password\", type: \"password\" },\r\n      },\r\n      async authorize(credentials) {\r\n        if (!credentials?.username || !credentials?.password) {\r\n          return null\r\n        }\r\n\r\n        // 1) ค้นหาผู้ใช้\r\n        const user = await prisma.user.findUnique({\r\n          where: { username: credentials.username },\r\n        })\r\n        if (!user) return null\r\n\r\n        // 2) ตรวจรหัสผ่าน\r\n        const ok = await bcrypt.compare(credentials.password, user.password)\r\n        if (!ok) return null\r\n\r\n        // 3) return เฉพาะ field ที่จำเป็น\r\n        return { id: user.id, username: user.username, role: user.role }\r\n      },\r\n    }),\r\n  ],\r\n  callbacks: {\r\n    async jwt({ token, user }) {\r\n      if (user) {\r\n        token.id = (user as any).id\r\n        token.username = (user as any).username\r\n        token.role = (user as any).role\r\n      }\r\n      return token   // ✅ ต้อง return token\r\n    },\r\n    async session({ session, token }) {\r\n      session.user = {\r\n        ...(session.user || {}),\r\n        id: token.id as string,\r\n        username: token.username as string,\r\n        role: token.role as string,\r\n      }\r\n      return session   // ✅ return session ที่แก้แล้ว\r\n    },\r\n  },\r\n  secret: process.env.NEXTAUTH_SECRET,\r\n}\r\n\r\nconst handler = NextAuth(authOptions)\r\nexport { handler as GET, handler as POST }"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA;;;;;AAMO,MAAM,cAA+B;IAC1C,SAAS;QAAE,UAAU;IAAe;IACpC,WAAW;QACT,CAAA,GAAA,wJAAA,CAAA,UAAmB,AAAD,EAAE;YAClB,MAAM;YACN,aAAa;gBACX,UAAU;oBAAE,OAAO;oBAAY,MAAM;gBAAO;gBAC5C,UAAU;oBAAE,OAAO;oBAAY,MAAM;gBAAW;YAClD;YACA,MAAM,WAAU,WAAW;gBACzB,IAAI,CAAC,aAAa,YAAY,CAAC,aAAa,UAAU;oBACpD,OAAO;gBACT;gBAEA,iBAAiB;gBACjB,MAAM,OAAO,MAAM,6GAAA,CAAA,SAAM,CAAC,IAAI,CAAC,UAAU,CAAC;oBACxC,OAAO;wBAAE,UAAU,YAAY,QAAQ;oBAAC;gBAC1C;gBACA,IAAI,CAAC,MAAM,OAAO;gBAElB,kBAAkB;gBAClB,MAAM,KAAK,MAAM,iIAAA,CAAA,UAAM,CAAC,OAAO,CAAC,YAAY,QAAQ,EAAE,KAAK,QAAQ;gBACnE,IAAI,CAAC,IAAI,OAAO;gBAEhB,kCAAkC;gBAClC,OAAO;oBAAE,IAAI,KAAK,EAAE;oBAAE,UAAU,KAAK,QAAQ;oBAAE,MAAM,KAAK,IAAI;gBAAC;YACjE;QACF;KACD;IACD,WAAW;QACT,MAAM,KAAI,EAAE,KAAK,EAAE,IAAI,EAAE;YACvB,IAAI,MAAM;gBACR,MAAM,EAAE,GAAG,AAAC,KAAa,EAAE;gBAC3B,MAAM,QAAQ,GAAG,AAAC,KAAa,QAAQ;gBACvC,MAAM,IAAI,GAAG,AAAC,KAAa,IAAI;YACjC;YACA,OAAO,MAAQ,sBAAsB;;QACvC;QACA,MAAM,SAAQ,EAAE,OAAO,EAAE,KAAK,EAAE;YAC9B,QAAQ,IAAI,GAAG;gBACb,GAAI,QAAQ,IAAI,IAAI,CAAC,CAAC;gBACtB,IAAI,MAAM,EAAE;gBACZ,UAAU,MAAM,QAAQ;gBACxB,MAAM,MAAM,IAAI;YAClB;YACA,OAAO,QAAU,8BAA8B;;QACjD;IACF;IACA,QAAQ,QAAQ,GAAG,CAAC,eAAe;AACrC;AAEA,MAAM,UAAU,CAAA,GAAA,qIAAA,CAAA,UAAQ,AAAD,EAAE","debugId":null}},
    {"offset": {"line": 196, "column": 0}, "map": {"version":3,"sources":["file:///D:/next-project067/product-app-067/app/dashboard/page.tsx"],"sourcesContent":["// app/dashboard/page.tsx\r\nimport { getServerSession } from \"next-auth\"\r\nimport { authOptions } from \"@/app/api/auth/[...nextauth]/route\"\r\nimport { redirect } from \"next/navigation\"\r\nimport Link from \"next/link\"\r\n\r\nexport default async function DashboardPage() {\r\n  const session = await getServerSession(authOptions)\r\n\r\n  if (!session) {\r\n    redirect(\"/login\")\r\n  }\r\n\r\n  return (\r\n    <div className=\"p-6\">\r\n      <h1 className=\"text-2xl font-bold\">Dashboard</h1>\r\n      <p>ยินดีต้อนรับ, {session.user.username}</p>\r\n      <p>บทบาท: {session.user.role}</p>\r\n\r\n      <div className=\"mt-4\">\r\n        <Link\r\n          href=\"/profile\"\r\n          className=\"text-blue-600 underline hover:text-blue-800\"\r\n        >\r\n          ไปที่โปรไฟล์ (แก้ไขรหัสผ่าน)\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n"],"names":[],"mappings":"AAAA,yBAAyB;;;;;AACzB;AACA;AACA;AAAA;AACA;;;;;;AAEe,eAAe;IAC5B,MAAM,UAAU,MAAM,CAAA,GAAA,qIAAA,CAAA,mBAAgB,AAAD,EAAE,iJAAA,CAAA,cAAW;IAElD,IAAI,CAAC,SAAS;QACZ,CAAA,GAAA,qLAAA,CAAA,WAAQ,AAAD,EAAE;IACX;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAG,WAAU;0BAAqB;;;;;;0BACnC,8OAAC;;oBAAE;oBAAe,QAAQ,IAAI,CAAC,QAAQ;;;;;;;0BACvC,8OAAC;;oBAAE;oBAAQ,QAAQ,IAAI,CAAC,IAAI;;;;;;;0BAE5B,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC,4JAAA,CAAA,UAAI;oBACH,MAAK;oBACL,WAAU;8BACX;;;;;;;;;;;;;;;;;AAMT","debugId":null}}]
}
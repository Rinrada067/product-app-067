{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 74, "column": 0}, "map": {"version":3,"sources":["file:///D:/next-project067/product-app-067/app/api/products/route.ts"],"sourcesContent":["import { NextResponse } from 'next/server'\r\nimport { PrismaClient } from '@prisma/client'\r\n\r\nconst prisma = new PrismaClient()\r\n\r\nexport async function GET() {\r\n  try {\r\n    // ดึง product พร้อมข้อมูล category ด้วย\r\n    const products = await prisma.product.findMany({\r\n      include: { category: true }\r\n    })\r\n    return NextResponse.json(products)\r\n  } catch (error) {\r\n    console.error('Error fetching products:', error)\r\n    return NextResponse.json({ message: 'ไม่สามารถดึงข้อมูลสินค้าได้' }, { status: 500 })\r\n  }\r\n}\r\n\r\nexport async function POST(req: Request) {\r\n  try {\r\n    const body = await req.json()\r\n    const { name, description, price, categoryId } = body\r\n\r\n    if (!name || name.trim() === '') {\r\n      return NextResponse.json({ error: 'ชื่อสินค้าต้องไม่ว่าง' }, { status: 400 })\r\n    }\r\n    if (price == null || isNaN(price)) {\r\n      return NextResponse.json({ error: 'ราคาสินค้าต้องเป็นตัวเลข' }, { status: 400 })\r\n    }\r\n\r\n    const product = await prisma.product.create({\r\n      data: {\r\n        name: name.trim(),\r\n        description: description?.trim() || '',\r\n        price: Number(price),\r\n        categoryId: categoryId || null\r\n      }\r\n    })\r\n\r\n    return NextResponse.json(product, { status: 201 })\r\n  } catch (error) {\r\n    console.error('Error creating product:', error)\r\n    return NextResponse.json({ error: 'ไม่สามารถสร้างสินค้าได้' }, { status: 500 })\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;AACA;;;AAEA,MAAM,SAAS,IAAI,6HAAA,CAAA,eAAY;AAExB,eAAe;IACpB,IAAI;QACF,wCAAwC;QACxC,MAAM,WAAW,MAAM,OAAO,OAAO,CAAC,QAAQ,CAAC;YAC7C,SAAS;gBAAE,UAAU;YAAK;QAC5B;QACA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;IAC3B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,4BAA4B;QAC1C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;QAA8B,GAAG;YAAE,QAAQ;QAAI;IACrF;AACF;AAEO,eAAe,KAAK,GAAY;IACrC,IAAI;QACF,MAAM,OAAO,MAAM,IAAI,IAAI;QAC3B,MAAM,EAAE,IAAI,EAAE,WAAW,EAAE,KAAK,EAAE,UAAU,EAAE,GAAG;QAEjD,IAAI,CAAC,QAAQ,KAAK,IAAI,OAAO,IAAI;YAC/B,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAwB,GAAG;gBAAE,QAAQ;YAAI;QAC7E;QACA,IAAI,SAAS,QAAQ,MAAM,QAAQ;YACjC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAA2B,GAAG;gBAAE,QAAQ;YAAI;QAChF;QAEA,MAAM,UAAU,MAAM,OAAO,OAAO,CAAC,MAAM,CAAC;YAC1C,MAAM;gBACJ,MAAM,KAAK,IAAI;gBACf,aAAa,aAAa,UAAU;gBACpC,OAAO,OAAO;gBACd,YAAY,cAAc;YAC5B;QACF;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC,SAAS;YAAE,QAAQ;QAAI;IAClD,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,2BAA2B;QACzC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAA0B,GAAG;YAAE,QAAQ;QAAI;IAC/E;AACF","debugId":null}}]
}